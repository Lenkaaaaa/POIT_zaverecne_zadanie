import serial 
import mysql.connector
import time

# Nastavenia s√©riov√©ho portu
SERIAL_PORT = "COM3"
BAUD_RATE = 9600

print("üì° ƒå√≠tam d√°ta zo senzora...")

# Pripojenie na s√©riov√Ω port
ser = serial.Serial(SERIAL_PORT, BAUD_RATE, timeout=1)
time.sleep(2)  # Poƒçkaj na Arduino reset

try:
    while True:
        # ‚¨á Znovu sa pripoj na DB v ka≈ædom cykle
        db = mysql.connector.connect(
            host="localhost",
            user="lenka",
            password="mojesilneheslo",
            database="poit_d1"
        )
        cursor = db.cursor()

        # Zisti, ƒçi je syst√©m akt√≠vny a monitoring zapnut√Ω
        cursor.execute("SELECT aktivny, monitoring FROM stav_systemu WHERE id = 1")
        result = cursor.fetchone()
        aktivny, monitoring_enabled = result if result else (False, False)

        if not aktivny:
            print("üîå Syst√©m nie je akt√≠vny ‚Äì d√°ta sa neukladaj√∫.")
            cursor.close()
            db.close()
            time.sleep(2)
            continue

        if not monitoring_enabled:
            print("‚è∏Ô∏è Monitoring je pozastaven√Ω ‚Äì d√°ta sa neukladaj√∫.")
            cursor.close()
            db.close()
            time.sleep(2)
            continue

        # Z√≠skaj aktu√°lne limity z tabuƒæky
        cursor.execute("""
            SELECT min_teplota, min_vlhkost
            FROM limity
            ORDER BY cas DESC
            LIMIT 1
        """)

        limit_row = cursor.fetchone()
        min_temp_limit, min_hum_limit = limit_row if limit_row else (0, 0)

        raw = ser.readline()
        print(f"RAW: {raw}")
        try:
            line = raw.decode('utf-8').strip()
            print(f"DECODED: {line}")

            if "," in line:
                temp_str, hum_str = line.split(",")
                temperature = float(temp_str)
                humidity = float(hum_str)
                print(f"üå°Ô∏è Teplota: {temperature} ¬∞C | üíß Vlhkos≈•: {humidity} %")

                if temperature >= min_temp_limit and humidity >= min_hum_limit:
                    cursor.execute("INSERT INTO monitorovanie (teplota, vlhkost) VALUES (%s, %s)", (temperature, humidity))
                    db.commit()
                    print("‚úÖ Hodnoty ulo≈æen√© do datab√°zy.")
                else:
                    print("‚ö†Ô∏è Hodnoty pod limitom ‚Äì nezap√≠san√©.")
            else:
                print("‚ö†Ô∏è Nespr√°vny form√°t")

        except Exception as e:
            print(f"‚ùå Chyba pri spracovan√≠: {e}")

        cursor.close()
        db.close()
        time.sleep(2)

except KeyboardInterrupt:
    print("üõë Ukonƒçen√© pou≈æ√≠vateƒæom.")
    ser.close()
